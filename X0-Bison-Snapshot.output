Nonterminals useless in grammar

   function_decl_list


Terminals unused in grammar

   CALLSYM
   EXITSYM
   REPEATSYM
   UNTILSYM
   KIBONOHANASYM
   RETURNSYM


Rules useless in grammar

  119 function_decl_list: function_decl_list function_decl
  120                   | function_decl


Rules useless in parser due to conflicts

   26 statement_list: %empty

   41 statement: %empty

   47 case_stat: %empty


State 13 conflicts: 30 shift/reduce, 31 reduce/reduce
State 29 conflicts: 30 shift/reduce, 31 reduce/reduce
State 42 conflicts: 6 shift/reduce
State 45 conflicts: 31 shift/reduce, 31 reduce/reduce
State 48 conflicts: 1 shift/reduce, 31 reduce/reduce
State 84 conflicts: 31 shift/reduce, 31 reduce/reduce
State 175 conflicts: 1 shift/reduce, 2 reduce/reduce
State 186 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: function_decl MAINSYM LBRACE statement_list RBRACE

    2 declaration_list: declaration_list declaration_stat
    3                 | declaration_stat
    4                 | %empty

    5 declaration_stat: typeenum identlist SEMICOLONSTAT
    6                 | typeenum identarraylist SEMICOLON
    7                 | CONSTSYM typeenum identlist SEMICOLON
    8                 | CONSTSYM typeenum identarraylist SEMICOLON

    9 identlist: identdef
   10          | identlist COMMA identdef

   11 identdef: IDENT
   12         | IDENT BECOMES factor

   13 typeenum: INTSYM
   14         | STRINGSYM
   15         | BOOLSYM
   16         | REALSYM
   17         | CHARSYM

   18 identarraylist: identarraydef
   19               | identarraylist COMMA identarraydef

   20 identarraydef: IDENT LBRACKET dimensionlist RBRACKET

   21 dimensionlist: dimension
   22              | dimensionlist COMMA dimension

   23 dimension: INTEGER

   24 statement_list: statement_list statement
   25               | statement
   26               | %empty

   27 statement: expression_statement
   28          | if_statement
   29          | while_statement
   30          | read_statement
   31          | write_statement
   32          | compound_statement
   33          | for_statement
   34          | do_statement
   35          | declaration_list
   36          | continue_stat
   37          | break_stat
   38          | switch_statement
   39          | case_list
   40          | yarimasu_stat
   41          | %empty

   42 switch_statement: SWITCHSYM LPARENSTAT expression RPARENSTAT LBRACE case_list default_statement RBRACE

   43 case_list: case_list case_stat
   44          | case_stat
   45          | %empty

   46 case_stat: CASESYM expression COLON compound_statement
   47          | %empty

   48 default_statement: DEFAULTSYM COLON compound_statement

   49 continue_stat: CONTINUESYM SEMICOLONSTAT

   50 break_stat: BREAKSYM SEMICOLONSTAT

   51 if_statement: IFSYM LPARENSTAT expression RPARENSTAT compound_statement else_list

   52 else_list: ELSESYMSTAT compound_statement
   53          | %empty

   54 ELSESYMSTAT: ELSESYM

   55 while_statement: WHILESYMSTAT LPARENSTAT expression RPARENSTAT compound_statement

   56 WHILESYMSTAT: WHILESYM

   57 write_statement: WRITESYM LPARENSTAT expression RPARENSTAT SEMICOLONSTAT

   58 read_statement: READSYM LPARENSTAT var RPARENSTAT SEMICOLONSTAT

   59 compound_statement: LBRACE statement_list RBRACE

   60 for_statement: FORSYM LPARENSTAT expression SEMICOLONSTAT expression SEMICOLONSTAT expression RPARENSTAT INC_OR_NOT compound_statement

   61 INC_OR_NOT: %empty

   62 do_statement: DOSYM compound_statement WHILESYM LPAREN expression RPARENSTAT SEMICOLONSTAT

   63 var: IDENT
   64    | IDENT LBRACKET expression_list RBRACKET

   65 expression_list: expression
   66                | expression_list COMMA expression

   67 expression_statement: expression SEMICOLONSTAT
   68                     | SEMICOLONSTAT

   69 expression: var BECOMES expression
   70           | simple_expr
   71           | %empty

   72 simple_expr: additive_expr
   73            | additive_expr OPR additive_expr
   74            | additive_expr SINGLEOPR
   75            | SINGLEOPR additive_expr

   76 SINGLEOPR: INCPLUS
   77          | INCMINUS
   78          | NOT

   79 OPR: EQL
   80    | NEQ
   81    | LSS
   82    | LEQ
   83    | GTR
   84    | GEQ
   85    | AND
   86    | OR
   87    | XOR
   88    | BITAND
   89    | BITOR
   90    | RR
   91    | RL

   92 additive_expr: term
   93              | additive_expr PLUSMINUS term

   94 PLUSMINUS: PLUS
   95          | MINUS

   96 term: factor
   97     | term TIMESDEVIDE factor

   98 TIMESDEVIDE: TIMES
   99            | DEVIDE
  100            | MOD

  101 factor: LPARENSTAT expression RPARENSTAT
  102       | var
  103       | INTEGER
  104       | REAL
  105       | STRING
  106       | BOOL
  107       | CHAR
  108       | YAJU

  109 SEMICOLONSTAT: SEMICOLON

  110 LPARENSTAT: LPAREN

  111 RPARENSTAT: RPAREN

  112 function_decl: typeenum IDENT LPAREN para_list RPAREN compound_statement
  113              | %empty

  114 para_list: para_list COMMA para_item
  115          | para_item

  116 para_item: typeenum IDENT
  117          | %empty

  118 yarimasu_stat: YARIMASUNESYM SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
BOOLSYM (258) 15
BREAKSYM (259) 50
CALLSYM (260)
CASESYM (261) 46
CHARSYM (262) 17
COLON (263) 46 48
CONSTSYM (264) 7 8
CONTINUESYM (265) 49
DEFAULTSYM (266) 48
DOSYM (267) 62
ELSESYM (268) 54
EXITSYM (269)
FORSYM (270) 60
INTSYM (271) 13
IFSYM (272) 51
MAINSYM (273) 1
READSYM (274) 58
REALSYM (275) 16
REPEATSYM (276)
RR (277) 90
RL (278) 91
LPAREN (279) 62 110 112
RPAREN (280) 111 112
STRINGSYM (281) 14
SWITCHSYM (282) 42
UNTILSYM (283)
WHILESYM (284) 56 62
WRITESYM (285) 57
LBRACE (286) 1 42 59
RBRACE (287) 1 42 59
LBRACKET (288) 20 64
RBRACKET (289) 20 64
BITAND (290) 88
BITOR (291) 89
BECOMES (292) 12 69
COMMA (293) 10 19 22 66 114
LSS (294) 81
LEQ (295) 82
GTR (296) 83
GEQ (297) 84
EQL (298) 79
NEQ (299) 80
PLUS (300) 94
INCPLUS (301) 76
MINUS (302) 95
INCMINUS (303) 77
TIMES (304) 98
DEVIDE (305) 99
MOD (306) 100
SEMICOLON (307) 6 7 8 109 118
XOR (308) 87
AND (309) 85
OR (310) 86
NOT (311) 78
YAJU (312) 108
YARIMASUNESYM (313) 118
KIBONOHANASYM (314)
RETURNSYM (315)
IDENT (316) 11 12 20 63 64 112 116
INTEGER (317) 23 103
STRING (318) 105
CHAR (319) 107
BOOL (320) 106
REAL (321) 104


Nonterminals, with rules where they appear

$accept (67)
    on left: 0
program (68)
    on left: 1, on right: 0
declaration_list (69)
    on left: 2 3 4, on right: 2 35
declaration_stat (70)
    on left: 5 6 7 8, on right: 2 3
identlist (71)
    on left: 9 10, on right: 5 7 10
identdef (72)
    on left: 11 12, on right: 9 10
typeenum (73)
    on left: 13 14 15 16 17, on right: 5 6 7 8 112 116
identarraylist (74)
    on left: 18 19, on right: 6 8 19
identarraydef (75)
    on left: 20, on right: 18 19
dimensionlist (76)
    on left: 21 22, on right: 20 22
dimension (77)
    on left: 23, on right: 21 22
statement_list (78)
    on left: 24 25 26, on right: 1 24 59
statement (79)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41, on right:
    24 25
switch_statement (80)
    on left: 42, on right: 38
case_list (81)
    on left: 43 44 45, on right: 39 42 43
case_stat (82)
    on left: 46 47, on right: 43 44
default_statement (83)
    on left: 48, on right: 42
continue_stat (84)
    on left: 49, on right: 36
break_stat (85)
    on left: 50, on right: 37
if_statement (86)
    on left: 51, on right: 28
else_list (87)
    on left: 52 53, on right: 51
ELSESYMSTAT (88)
    on left: 54, on right: 52
while_statement (89)
    on left: 55, on right: 29
WHILESYMSTAT (90)
    on left: 56, on right: 55
write_statement (91)
    on left: 57, on right: 31
read_statement (92)
    on left: 58, on right: 30
compound_statement (93)
    on left: 59, on right: 32 46 48 51 52 55 60 62 112
for_statement (94)
    on left: 60, on right: 33
INC_OR_NOT (95)
    on left: 61, on right: 60
do_statement (96)
    on left: 62, on right: 34
var (97)
    on left: 63 64, on right: 58 69 102
expression_list (98)
    on left: 65 66, on right: 64 66
expression_statement (99)
    on left: 67 68, on right: 27
expression (100)
    on left: 69 70 71, on right: 42 46 51 55 57 60 62 65 66 67 69 101
simple_expr (101)
    on left: 72 73 74 75, on right: 70
SINGLEOPR (102)
    on left: 76 77 78, on right: 74 75
OPR (103)
    on left: 79 80 81 82 83 84 85 86 87 88 89 90 91, on right: 73
additive_expr (104)
    on left: 92 93, on right: 72 73 74 75 93
PLUSMINUS (105)
    on left: 94 95, on right: 93
term (106)
    on left: 96 97, on right: 92 93 97
TIMESDEVIDE (107)
    on left: 98 99 100, on right: 97
factor (108)
    on left: 101 102 103 104 105 106 107 108, on right: 12 96 97
SEMICOLONSTAT (109)
    on left: 109, on right: 5 49 50 57 58 60 62 67 68
LPARENSTAT (110)
    on left: 110, on right: 42 51 55 57 58 60 101
RPARENSTAT (111)
    on left: 111, on right: 42 51 55 57 58 60 62 101
function_decl (112)
    on left: 112 113, on right: 1
para_list (113)
    on left: 114 115, on right: 112 114
para_item (114)
    on left: 116 117, on right: 114 115
yarimasu_stat (115)
    on left: 118, on right: 40


State 0

    0 $accept: . program $end

    BOOLSYM    shift, and go to state 1
    CHARSYM    shift, and go to state 2
    INTSYM     shift, and go to state 3
    REALSYM    shift, and go to state 4
    STRINGSYM  shift, and go to state 5

    $default  reduce using rule 113 (function_decl)

    program        go to state 6
    typeenum       go to state 7
    function_decl  go to state 8


State 1

   15 typeenum: BOOLSYM .

    $default  reduce using rule 15 (typeenum)


State 2

   17 typeenum: CHARSYM .

    $default  reduce using rule 17 (typeenum)


State 3

   13 typeenum: INTSYM .

    $default  reduce using rule 13 (typeenum)


State 4

   16 typeenum: REALSYM .

    $default  reduce using rule 16 (typeenum)


State 5

   14 typeenum: STRINGSYM .

    $default  reduce using rule 14 (typeenum)


State 6

    0 $accept: program . $end

    $end  shift, and go to state 9


State 7

  112 function_decl: typeenum . IDENT LPAREN para_list RPAREN compound_statement

    IDENT  shift, and go to state 10


State 8

    1 program: function_decl . MAINSYM LBRACE statement_list RBRACE

    MAINSYM  shift, and go to state 11


State 9

    0 $accept: program $end .

    $default  accept


State 10

  112 function_decl: typeenum IDENT . LPAREN para_list RPAREN compound_statement

    LPAREN  shift, and go to state 12


State 11

    1 program: function_decl MAINSYM . LBRACE statement_list RBRACE

    LBRACE  shift, and go to state 13


State 12

  112 function_decl: typeenum IDENT LPAREN . para_list RPAREN compound_statement

    BOOLSYM    shift, and go to state 1
    CHARSYM    shift, and go to state 2
    INTSYM     shift, and go to state 3
    REALSYM    shift, and go to state 4
    STRINGSYM  shift, and go to state 5

    $default  reduce using rule 117 (para_item)

    typeenum   go to state 14
    para_list  go to state 15
    para_item  go to state 16


State 13

    1 program: function_decl MAINSYM LBRACE . statement_list RBRACE

    BOOLSYM        shift, and go to state 1
    BREAKSYM       shift, and go to state 17
    CASESYM        shift, and go to state 18
    CHARSYM        shift, and go to state 2
    CONSTSYM       shift, and go to state 19
    CONTINUESYM    shift, and go to state 20
    DOSYM          shift, and go to state 21
    FORSYM         shift, and go to state 22
    INTSYM         shift, and go to state 3
    IFSYM          shift, and go to state 23
    READSYM        shift, and go to state 24
    REALSYM        shift, and go to state 4
    LPAREN         shift, and go to state 25
    STRINGSYM      shift, and go to state 5
    SWITCHSYM      shift, and go to state 26
    WHILESYM       shift, and go to state 27
    WRITESYM       shift, and go to state 28
    LBRACE         shift, and go to state 29
    INCPLUS        shift, and go to state 30
    INCMINUS       shift, and go to state 31
    SEMICOLON      shift, and go to state 32
    NOT            shift, and go to state 33
    YAJU           shift, and go to state 34
    YARIMASUNESYM  shift, and go to state 35
    IDENT          shift, and go to state 36
    INTEGER        shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR           shift, and go to state 39
    BOOL           shift, and go to state 40
    REAL           shift, and go to state 41

    BOOLSYM        [reduce using rule 4 (declaration_list)]
    BOOLSYM        [reduce using rule 26 (statement_list)]
    BOOLSYM        [reduce using rule 41 (statement)]
    BOOLSYM        [reduce using rule 45 (case_list)]
    BOOLSYM        [reduce using rule 47 (case_stat)]
    BREAKSYM       [reduce using rule 4 (declaration_list)]
    BREAKSYM       [reduce using rule 26 (statement_list)]
    BREAKSYM       [reduce using rule 41 (statement)]
    BREAKSYM       [reduce using rule 45 (case_list)]
    BREAKSYM       [reduce using rule 47 (case_stat)]
    CASESYM        [reduce using rule 4 (declaration_list)]
    CASESYM        [reduce using rule 26 (statement_list)]
    CASESYM        [reduce using rule 41 (statement)]
    CASESYM        [reduce using rule 45 (case_list)]
    CASESYM        [reduce using rule 47 (case_stat)]
    CHARSYM        [reduce using rule 4 (declaration_list)]
    CHARSYM        [reduce using rule 26 (statement_list)]
    CHARSYM        [reduce using rule 41 (statement)]
    CHARSYM        [reduce using rule 45 (case_list)]
    CHARSYM        [reduce using rule 47 (case_stat)]
    CONSTSYM       [reduce using rule 4 (declaration_list)]
    CONSTSYM       [reduce using rule 26 (statement_list)]
    CONSTSYM       [reduce using rule 41 (statement)]
    CONSTSYM       [reduce using rule 45 (case_list)]
    CONSTSYM       [reduce using rule 47 (case_stat)]
    CONTINUESYM    [reduce using rule 4 (declaration_list)]
    CONTINUESYM    [reduce using rule 26 (statement_list)]
    CONTINUESYM    [reduce using rule 41 (statement)]
    CONTINUESYM    [reduce using rule 45 (case_list)]
    CONTINUESYM    [reduce using rule 47 (case_stat)]
    DOSYM          [reduce using rule 4 (declaration_list)]
    DOSYM          [reduce using rule 26 (statement_list)]
    DOSYM          [reduce using rule 41 (statement)]
    DOSYM          [reduce using rule 45 (case_list)]
    DOSYM          [reduce using rule 47 (case_stat)]
    FORSYM         [reduce using rule 4 (declaration_list)]
    FORSYM         [reduce using rule 26 (statement_list)]
    FORSYM         [reduce using rule 41 (statement)]
    FORSYM         [reduce using rule 45 (case_list)]
    FORSYM         [reduce using rule 47 (case_stat)]
    INTSYM         [reduce using rule 4 (declaration_list)]
    INTSYM         [reduce using rule 26 (statement_list)]
    INTSYM         [reduce using rule 41 (statement)]
    INTSYM         [reduce using rule 45 (case_list)]
    INTSYM         [reduce using rule 47 (case_stat)]
    IFSYM          [reduce using rule 4 (declaration_list)]
    IFSYM          [reduce using rule 26 (statement_list)]
    IFSYM          [reduce using rule 41 (statement)]
    IFSYM          [reduce using rule 45 (case_list)]
    IFSYM          [reduce using rule 47 (case_stat)]
    READSYM        [reduce using rule 4 (declaration_list)]
    READSYM        [reduce using rule 26 (statement_list)]
    READSYM        [reduce using rule 41 (statement)]
    READSYM        [reduce using rule 45 (case_list)]
    READSYM        [reduce using rule 47 (case_stat)]
    REALSYM        [reduce using rule 4 (declaration_list)]
    REALSYM        [reduce using rule 26 (statement_list)]
    REALSYM        [reduce using rule 41 (statement)]
    REALSYM        [reduce using rule 45 (case_list)]
    REALSYM        [reduce using rule 47 (case_stat)]
    LPAREN         [reduce using rule 4 (declaration_list)]
    LPAREN         [reduce using rule 26 (statement_list)]
    LPAREN         [reduce using rule 41 (statement)]
    LPAREN         [reduce using rule 45 (case_list)]
    LPAREN         [reduce using rule 47 (case_stat)]
    STRINGSYM      [reduce using rule 4 (declaration_list)]
    STRINGSYM      [reduce using rule 26 (statement_list)]
    STRINGSYM      [reduce using rule 41 (statement)]
    STRINGSYM      [reduce using rule 45 (case_list)]
    STRINGSYM      [reduce using rule 47 (case_stat)]
    SWITCHSYM      [reduce using rule 4 (declaration_list)]
    SWITCHSYM      [reduce using rule 26 (statement_list)]
    SWITCHSYM      [reduce using rule 41 (statement)]
    SWITCHSYM      [reduce using rule 45 (case_list)]
    SWITCHSYM      [reduce using rule 47 (case_stat)]
    WHILESYM       [reduce using rule 4 (declaration_list)]
    WHILESYM       [reduce using rule 26 (statement_list)]
    WHILESYM       [reduce using rule 41 (statement)]
    WHILESYM       [reduce using rule 45 (case_list)]
    WHILESYM       [reduce using rule 47 (case_stat)]
    WRITESYM       [reduce using rule 4 (declaration_list)]
    WRITESYM       [reduce using rule 26 (statement_list)]
    WRITESYM       [reduce using rule 41 (statement)]
    WRITESYM       [reduce using rule 45 (case_list)]
    WRITESYM       [reduce using rule 47 (case_stat)]
    LBRACE         [reduce using rule 4 (declaration_list)]
    LBRACE         [reduce using rule 26 (statement_list)]
    LBRACE         [reduce using rule 41 (statement)]
    LBRACE         [reduce using rule 45 (case_list)]
    LBRACE         [reduce using rule 47 (case_stat)]
    RBRACE         reduce using rule 4 (declaration_list)
    RBRACE         [reduce using rule 26 (statement_list)]
    RBRACE         [reduce using rule 41 (statement)]
    RBRACE         [reduce using rule 45 (case_list)]
    RBRACE         [reduce using rule 47 (case_stat)]
    INCPLUS        [reduce using rule 4 (declaration_list)]
    INCPLUS        [reduce using rule 26 (statement_list)]
    INCPLUS        [reduce using rule 41 (statement)]
    INCPLUS        [reduce using rule 45 (case_list)]
    INCPLUS        [reduce using rule 47 (case_stat)]
    INCMINUS       [reduce using rule 4 (declaration_list)]
    INCMINUS       [reduce using rule 26 (statement_list)]
    INCMINUS       [reduce using rule 41 (statement)]
    INCMINUS       [reduce using rule 45 (case_list)]
    INCMINUS       [reduce using rule 47 (case_stat)]
    SEMICOLON      [reduce using rule 4 (declaration_list)]
    SEMICOLON      [reduce using rule 26 (statement_list)]
    SEMICOLON      [reduce using rule 41 (statement)]
    SEMICOLON      [reduce using rule 45 (case_list)]
    SEMICOLON      [reduce using rule 47 (case_stat)]
    SEMICOLON      [reduce using rule 71 (expression)]
    NOT            [reduce using rule 4 (declaration_list)]
    NOT            [reduce using rule 26 (statement_list)]
    NOT            [reduce using rule 41 (statement)]
    NOT            [reduce using rule 45 (case_list)]
    NOT            [reduce using rule 47 (case_stat)]
    YAJU           [reduce using rule 4 (declaration_list)]
    YAJU           [reduce using rule 26 (statement_list)]
    YAJU           [reduce using rule 41 (statement)]
    YAJU           [reduce using rule 45 (case_list)]
    YAJU           [reduce using rule 47 (case_stat)]
    YARIMASUNESYM  [reduce using rule 4 (declaration_list)]
    YARIMASUNESYM  [reduce using rule 26 (statement_list)]
    YARIMASUNESYM  [reduce using rule 41 (statement)]
    YARIMASUNESYM  [reduce using rule 45 (case_list)]
    YARIMASUNESYM  [reduce using rule 47 (case_stat)]
    IDENT          [reduce using rule 4 (declaration_list)]
    IDENT          [reduce using rule 26 (statement_list)]
    IDENT          [reduce using rule 41 (statement)]
    IDENT          [reduce using rule 45 (case_list)]
    IDENT          [reduce using rule 47 (case_stat)]
    INTEGER        [reduce using rule 4 (declaration_list)]
    INTEGER        [reduce using rule 26 (statement_list)]
    INTEGER        [reduce using rule 41 (statement)]
    INTEGER        [reduce using rule 45 (case_list)]
    INTEGER        [reduce using rule 47 (case_stat)]
    STRING         [reduce using rule 4 (declaration_list)]
    STRING         [reduce using rule 26 (statement_list)]
    STRING         [reduce using rule 41 (statement)]
    STRING         [reduce using rule 45 (case_list)]
    STRING         [reduce using rule 47 (case_stat)]
    CHAR           [reduce using rule 4 (declaration_list)]
    CHAR           [reduce using rule 26 (statement_list)]
    CHAR           [reduce using rule 41 (statement)]
    CHAR           [reduce using rule 45 (case_list)]
    CHAR           [reduce using rule 47 (case_stat)]
    BOOL           [reduce using rule 4 (declaration_list)]
    BOOL           [reduce using rule 26 (statement_list)]
    BOOL           [reduce using rule 41 (statement)]
    BOOL           [reduce using rule 45 (case_list)]
    BOOL           [reduce using rule 47 (case_stat)]
    REAL           [reduce using rule 4 (declaration_list)]
    REAL           [reduce using rule 26 (statement_list)]
    REAL           [reduce using rule 41 (statement)]
    REAL           [reduce using rule 45 (case_list)]
    REAL           [reduce using rule 47 (case_stat)]
    $default       reduce using rule 4 (declaration_list)

    declaration_list      go to state 42
    declaration_stat      go to state 43
    typeenum              go to state 44
    statement_list        go to state 45
    statement             go to state 46
    switch_statement      go to state 47
    case_list             go to state 48
    case_stat             go to state 49
    continue_stat         go to state 50
    break_stat            go to state 51
    if_statement          go to state 52
    while_statement       go to state 53
    WHILESYMSTAT          go to state 54
    write_statement       go to state 55
    read_statement        go to state 56
    compound_statement    go to state 57
    for_statement         go to state 58
    do_statement          go to state 59
    var                   go to state 60
    expression_statement  go to state 61
    expression            go to state 62
    simple_expr           go to state 63
    SINGLEOPR             go to state 64
    additive_expr         go to state 65
    term                  go to state 66
    factor                go to state 67
    SEMICOLONSTAT         go to state 68
    LPARENSTAT            go to state 69
    yarimasu_stat         go to state 70


State 14

  116 para_item: typeenum . IDENT

    IDENT  shift, and go to state 71


State 15

  112 function_decl: typeenum IDENT LPAREN para_list . RPAREN compound_statement
  114 para_list: para_list . COMMA para_item

    RPAREN  shift, and go to state 72
    COMMA   shift, and go to state 73


State 16

  115 para_list: para_item .

    $default  reduce using rule 115 (para_list)


State 17

   50 break_stat: BREAKSYM . SEMICOLONSTAT

    SEMICOLON  shift, and go to state 32

    SEMICOLONSTAT  go to state 74


State 18

   46 case_stat: CASESYM . expression COLON compound_statement

    LPAREN    shift, and go to state 25
    INCPLUS   shift, and go to state 30
    INCMINUS  shift, and go to state 31
    NOT       shift, and go to state 33
    YAJU      shift, and go to state 34
    IDENT     shift, and go to state 36
    INTEGER   shift, and go to state 37
    STRING    shift, and go to state 38
    CHAR      shift, and go to state 39
    BOOL      shift, and go to state 40
    REAL      shift, and go to state 41

    $default  reduce using rule 71 (expression)

    var            go to state 60
    expression     go to state 75
    simple_expr    go to state 63
    SINGLEOPR      go to state 64
    additive_expr  go to state 65
    term           go to state 66
    factor         go to state 67
    LPARENSTAT     go to state 69


State 19

    7 declaration_stat: CONSTSYM . typeenum identlist SEMICOLON
    8                 | CONSTSYM . typeenum identarraylist SEMICOLON

    BOOLSYM    shift, and go to state 1
    CHARSYM    shift, and go to state 2
    INTSYM     shift, and go to state 3
    REALSYM    shift, and go to state 4
    STRINGSYM  shift, and go to state 5

    typeenum  go to state 76


State 20

   49 continue_stat: CONTINUESYM . SEMICOLONSTAT

    SEMICOLON  shift, and go to state 32

    SEMICOLONSTAT  go to state 77


State 21

   62 do_statement: DOSYM . compound_statement WHILESYM LPAREN expression RPARENSTAT SEMICOLONSTAT

    LBRACE  shift, and go to state 29

    compound_statement  go to state 78


State 22

   60 for_statement: FORSYM . LPARENSTAT expression SEMICOLONSTAT expression SEMICOLONSTAT expression RPARENSTAT INC_OR_NOT compound_statement

    LPAREN  shift, and go to state 25

    LPARENSTAT  go to state 79


State 23

   51 if_statement: IFSYM . LPARENSTAT expression RPARENSTAT compound_statement else_list

    LPAREN  shift, and go to state 25

    LPARENSTAT  go to state 80


State 24

   58 read_statement: READSYM . LPARENSTAT var RPARENSTAT SEMICOLONSTAT

    LPAREN  shift, and go to state 25

    LPARENSTAT  go to state 81


State 25

  110 LPARENSTAT: LPAREN .

    $default  reduce using rule 110 (LPARENSTAT)


State 26

   42 switch_statement: SWITCHSYM . LPARENSTAT expression RPARENSTAT LBRACE case_list default_statement RBRACE

    LPAREN  shift, and go to state 25

    LPARENSTAT  go to state 82


State 27

   56 WHILESYMSTAT: WHILESYM .

    $default  reduce using rule 56 (WHILESYMSTAT)


State 28

   57 write_statement: WRITESYM . LPARENSTAT expression RPARENSTAT SEMICOLONSTAT

    LPAREN  shift, and go to state 25

    LPARENSTAT  go to state 83


State 29

   59 compound_statement: LBRACE . statement_list RBRACE

    BOOLSYM        shift, and go to state 1
    BREAKSYM       shift, and go to state 17
    CASESYM        shift, and go to state 18
    CHARSYM        shift, and go to state 2
    CONSTSYM       shift, and go to state 19
    CONTINUESYM    shift, and go to state 20
    DOSYM          shift, and go to state 21
    FORSYM         shift, and go to state 22
    INTSYM         shift, and go to state 3
    IFSYM          shift, and go to state 23
    READSYM        shift, and go to state 24
    REALSYM        shift, and go to state 4
    LPAREN         shift, and go to state 25
    STRINGSYM      shift, and go to state 5
    SWITCHSYM      shift, and go to state 26
    WHILESYM       shift, and go to state 27
    WRITESYM       shift, and go to state 28
    LBRACE         shift, and go to state 29
    INCPLUS        shift, and go to state 30
    INCMINUS       shift, and go to state 31
    SEMICOLON      shift, and go to state 32
    NOT            shift, and go to state 33
    YAJU           shift, and go to state 34
    YARIMASUNESYM  shift, and go to state 35
    IDENT          shift, and go to state 36
    INTEGER        shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR           shift, and go to state 39
    BOOL           shift, and go to state 40
    REAL           shift, and go to state 41

    BOOLSYM        [reduce using rule 4 (declaration_list)]
    BOOLSYM        [reduce using rule 26 (statement_list)]
    BOOLSYM        [reduce using rule 41 (statement)]
    BOOLSYM        [reduce using rule 45 (case_list)]
    BOOLSYM        [reduce using rule 47 (case_stat)]
    BREAKSYM       [reduce using rule 4 (declaration_list)]
    BREAKSYM       [reduce using rule 26 (statement_list)]
    BREAKSYM       [reduce using rule 41 (statement)]
    BREAKSYM       [reduce using rule 45 (case_list)]
    BREAKSYM       [reduce using rule 47 (case_stat)]
    CASESYM        [reduce using rule 4 (declaration_list)]
    CASESYM        [reduce using rule 26 (statement_list)]
    CASESYM        [reduce using rule 41 (statement)]
    CASESYM        [reduce using rule 45 (case_list)]
    CASESYM        [reduce using rule 47 (case_stat)]
    CHARSYM        [reduce using rule 4 (declaration_list)]
    CHARSYM        [reduce using rule 26 (statement_list)]
    CHARSYM        [reduce using rule 41 (statement)]
    CHARSYM        [reduce using rule 45 (case_list)]
    CHARSYM        [reduce using rule 47 (case_stat)]
    CONSTSYM       [reduce using rule 4 (declaration_list)]
    CONSTSYM       [reduce using rule 26 (statement_list)]
    CONSTSYM       [reduce using rule 41 (statement)]
    CONSTSYM       [reduce using rule 45 (case_list)]
    CONSTSYM       [reduce using rule 47 (case_stat)]
    CONTINUESYM    [reduce using rule 4 (declaration_list)]
    CONTINUESYM    [reduce using rule 26 (statement_list)]
    CONTINUESYM    [reduce using rule 41 (statement)]
    CONTINUESYM    [reduce using rule 45 (case_list)]
    CONTINUESYM    [reduce using rule 47 (case_stat)]
    DOSYM          [reduce using rule 4 (declaration_list)]
    DOSYM          [reduce using rule 26 (statement_list)]
    DOSYM          [reduce using rule 41 (statement)]
    DOSYM          [reduce using rule 45 (case_list)]
    DOSYM          [reduce using rule 47 (case_stat)]
    FORSYM         [reduce using rule 4 (declaration_list)]
    FORSYM         [reduce using rule 26 (statement_list)]
    FORSYM         [reduce using rule 41 (statement)]
    FORSYM         [reduce using rule 45 (case_list)]
    FORSYM         [reduce using rule 47 (case_stat)]
    INTSYM         [reduce using rule 4 (declaration_list)]
    INTSYM         [reduce using rule 26 (statement_list)]
    INTSYM         [reduce using rule 41 (statement)]
    INTSYM         [reduce using rule 45 (case_list)]
    INTSYM         [reduce using rule 47 (case_stat)]
    IFSYM          [reduce using rule 4 (declaration_list)]
    IFSYM          [reduce using rule 26 (statement_list)]
    IFSYM          [reduce using rule 41 (statement)]
    IFSYM          [reduce using rule 45 (case_list)]
    IFSYM          [reduce using rule 47 (case_stat)]
    READSYM        [reduce using rule 4 (declaration_list)]
    READSYM        [reduce using rule 26 (statement_list)]
    READSYM        [reduce using rule 41 (statement)]
    READSYM        [reduce using rule 45 (case_list)]
    READSYM        [reduce using rule 47 (case_stat)]
    REALSYM        [reduce using rule 4 (declaration_list)]
    REALSYM        [reduce using rule 26 (statement_list)]
    REALSYM        [reduce using rule 41 (statement)]
    REALSYM        [reduce using rule 45 (case_list)]
    REALSYM        [reduce using rule 47 (case_stat)]
    LPAREN         [reduce using rule 4 (declaration_list)]
    LPAREN         [reduce using rule 26 (statement_list)]
    LPAREN         [reduce using rule 41 (statement)]
    LPAREN         [reduce using rule 45 (case_list)]
    LPAREN         [reduce using rule 47 (case_stat)]
    STRINGSYM      [reduce using rule 4 (declaration_list)]
    STRINGSYM      [reduce using rule 26 (statement_list)]
    STRINGSYM      [reduce using rule 41 (statement)]
    STRINGSYM      [reduce using rule 45 (case_list)]
    STRINGSYM      [reduce using rule 47 (case_stat)]
    SWITCHSYM      [reduce using rule 4 (declaration_list)]
    SWITCHSYM      [reduce using rule 26 (statement_list)]
    SWITCHSYM      [reduce using rule 41 (statement)]
    SWITCHSYM      [reduce using rule 45 (case_list)]
    SWITCHSYM      [reduce using rule 47 (case_stat)]
    WHILESYM       [reduce using rule 4 (declaration_list)]
    WHILESYM       [reduce using rule 26 (statement_list)]
    WHILESYM       [reduce using rule 41 (statement)]
    WHILESYM       [reduce using rule 45 (case_list)]
    WHILESYM       [reduce using rule 47 (case_stat)]
    WRITESYM       [reduce using rule 4 (declaration_list)]
    WRITESYM       [reduce using rule 26 (statement_list)]
    WRITESYM       [reduce using rule 41 (statement)]
    WRITESYM       [reduce using rule 45 (case_list)]
    WRITESYM       [reduce using rule 47 (case_stat)]
    LBRACE         [reduce using rule 4 (declaration_list)]
    LBRACE         [reduce using rule 26 (statement_list)]
    LBRACE         [reduce using rule 41 (statement)]
    LBRACE         [reduce using rule 45 (case_list)]
    LBRACE         [reduce using rule 47 (case_stat)]
    RBRACE         reduce using rule 4 (declaration_list)
    RBRACE         [reduce using rule 26 (statement_list)]
    RBRACE         [reduce using rule 41 (statement)]
    RBRACE         [reduce using rule 45 (case_list)]
    RBRACE         [reduce using rule 47 (case_stat)]
    INCPLUS        [reduce using rule 4 (declaration_list)]
    INCPLUS        [reduce using rule 26 (statement_list)]
    INCPLUS        [reduce using rule 41 (statement)]
    INCPLUS        [reduce using rule 45 (case_list)]
    INCPLUS        [reduce using rule 47 (case_stat)]
    INCMINUS       [reduce using rule 4 (declaration_list)]
    INCMINUS       [reduce using rule 26 (statement_list)]
    INCMINUS       [reduce using rule 41 (statement)]
    INCMINUS       [reduce using rule 45 (case_list)]
    INCMINUS       [reduce using rule 47 (case_stat)]
    SEMICOLON      [reduce using rule 4 (declaration_list)]
    SEMICOLON      [reduce using rule 26 (statement_list)]
    SEMICOLON      [reduce using rule 41 (statement)]
    SEMICOLON      [reduce using rule 45 (case_list)]
    SEMICOLON      [reduce using rule 47 (case_stat)]
    SEMICOLON      [reduce using rule 71 (expression)]
    NOT            [reduce using rule 4 (declaration_list)]
    NOT            [reduce using rule 26 (statement_list)]
    NOT            [reduce using rule 41 (statement)]
    NOT            [reduce using rule 45 (case_list)]
    NOT            [reduce using rule 47 (case_stat)]
    YAJU           [reduce using rule 4 (declaration_list)]
    YAJU           [reduce using rule 26 (statement_list)]
    YAJU           [reduce using rule 41 (statement)]
    YAJU           [reduce using rule 45 (case_list)]
    YAJU           [reduce using rule 47 (case_stat)]
    YARIMASUNESYM  [reduce using rule 4 (declaration_list)]
    YARIMASUNESYM  [reduce using rule 26 (statement_list)]
    YARIMASUNESYM  [reduce using rule 41 (statement)]
    YARIMASUNESYM  [reduce using rule 45 (case_list)]
    YARIMASUNESYM  [reduce using rule 47 (case_stat)]
    IDENT          [reduce using rule 4 (declaration_list)]
    IDENT          [reduce using rule 26 (statement_list)]
    IDENT          [reduce using rule 41 (statement)]
    IDENT          [reduce using rule 45 (case_list)]
    IDENT          [reduce using rule 47 (case_stat)]
    INTEGER        [reduce using rule 4 (declaration_list)]
    INTEGER        [reduce using rule 26 (statement_list)]
    INTEGER        [reduce using rule 41 (statement)]
    INTEGER        [reduce using rule 45 (case_list)]
    INTEGER        [reduce using rule 47 (case_stat)]
    STRING         [reduce using rule 4 (declaration_list)]
    STRING         [reduce using rule 26 (statement_list)]
    STRING         [reduce using rule 41 (statement)]
    STRING         [reduce using rule 45 (case_list)]
    STRING         [reduce using rule 47 (case_stat)]
    CHAR           [reduce using rule 4 (declaration_list)]
    CHAR           [reduce using rule 26 (statement_list)]
    CHAR           [reduce using rule 41 (statement)]
    CHAR           [reduce using rule 45 (case_list)]
    CHAR           [reduce using rule 47 (case_stat)]
    BOOL           [reduce using rule 4 (declaration_list)]
    BOOL           [reduce using rule 26 (statement_list)]
    BOOL           [reduce using rule 41 (statement)]
    BOOL           [reduce using rule 45 (case_list)]
    BOOL           [reduce using rule 47 (case_stat)]
    REAL           [reduce using rule 4 (declaration_list)]
    REAL           [reduce using rule 26 (statement_list)]
    REAL           [reduce using rule 41 (statement)]
    REAL           [reduce using rule 45 (case_list)]
    REAL           [reduce using rule 47 (case_stat)]
    $default       reduce using rule 4 (declaration_list)

    declaration_list      go to state 42
    declaration_stat      go to state 43
    typeenum              go to state 44
    statement_list        go to state 84
    statement             go to state 46
    switch_statement      go to state 47
    case_list             go to state 48
    case_stat             go to state 49
    continue_stat         go to state 50
    break_stat            go to state 51
    if_statement          go to state 52
    while_statement       go to state 53
    WHILESYMSTAT          go to state 54
    write_statement       go to state 55
    read_statement        go to state 56
    compound_statement    go to state 57
    for_statement         go to state 58
    do_statement          go to state 59
    var                   go to state 60
    expression_statement  go to state 61
    expression            go to state 62
    simple_expr           go to state 63
    SINGLEOPR             go to state 64
    additive_expr         go to state 65
    term                  go to state 66
    factor                go to state 67
    SEMICOLONSTAT         go to state 68
    LPARENSTAT            go to state 69
    yarimasu_stat         go to state 70


State 30

   76 SINGLEOPR: INCPLUS .

    $default  reduce using rule 76 (SINGLEOPR)


State 31

   77 SINGLEOPR: INCMINUS .

    $default  reduce using rule 77 (SINGLEOPR)


State 32

  109 SEMICOLONSTAT: SEMICOLON .

    $default  reduce using rule 109 (SEMICOLONSTAT)


State 33

   78 SINGLEOPR: NOT .

    $default  reduce using rule 78 (SINGLEOPR)


State 34

  108 factor: YAJU .

    $default  reduce using rule 108 (factor)


State 35

  118 yarimasu_stat: YARIMASUNESYM . SEMICOLON

    SEMICOLON  shift, and go to state 85


State 36

   63 var: IDENT .
   64    | IDENT . LBRACKET expression_list RBRACKET

    LBRACKET  shift, and go to state 86

    $default  reduce using rule 63 (var)


State 37

  103 factor: INTEGER .

    $default  reduce using rule 103 (factor)


State 38

  105 factor: STRING .

    $default  reduce using rule 105 (factor)


State 39

  107 factor: CHAR .

    $default  reduce using rule 107 (factor)


State 40

  106 factor: BOOL .

    $default  reduce using rule 106 (factor)


State 41

  104 factor: REAL .

    $default  reduce using rule 104 (factor)


State 42

    2 declaration_list: declaration_list . declaration_stat
   35 statement: declaration_list .

    BOOLSYM    shift, and go to state 1
    CHARSYM    shift, and go to state 2
    CONSTSYM   shift, and go to state 19
    INTSYM     shift, and go to state 3
    REALSYM    shift, and go to state 4
    STRINGSYM  shift, and go to state 5

    BOOLSYM    [reduce using rule 35 (statement)]
    CHARSYM    [reduce using rule 35 (statement)]
    CONSTSYM   [reduce using rule 35 (statement)]
    INTSYM     [reduce using rule 35 (statement)]
    REALSYM    [reduce using rule 35 (statement)]
    STRINGSYM  [reduce using rule 35 (statement)]
    $default   reduce using rule 35 (statement)

    declaration_stat  go to state 87
    typeenum          go to state 44


State 43

    3 declaration_list: declaration_stat .

    $default  reduce using rule 3 (declaration_list)


State 44

    5 declaration_stat: typeenum . identlist SEMICOLONSTAT
    6                 | typeenum . identarraylist SEMICOLON

    IDENT  shift, and go to state 88

    identlist       go to state 89
    identdef        go to state 90
    identarraylist  go to state 91
    identarraydef   go to state 92


State 45

    1 program: function_decl MAINSYM LBRACE statement_list . RBRACE
   24 statement_list: statement_list . statement

    BOOLSYM        shift, and go to state 1
    BREAKSYM       shift, and go to state 17
    CASESYM        shift, and go to state 18
    CHARSYM        shift, and go to state 2
    CONSTSYM       shift, and go to state 19
    CONTINUESYM    shift, and go to state 20
    DOSYM          shift, and go to state 21
    FORSYM         shift, and go to state 22
    INTSYM         shift, and go to state 3
    IFSYM          shift, and go to state 23
    READSYM        shift, and go to state 24
    REALSYM        shift, and go to state 4
    LPAREN         shift, and go to state 25
    STRINGSYM      shift, and go to state 5
    SWITCHSYM      shift, and go to state 26
    WHILESYM       shift, and go to state 27
    WRITESYM       shift, and go to state 28
    LBRACE         shift, and go to state 29
    RBRACE         shift, and go to state 93
    INCPLUS        shift, and go to state 30
    INCMINUS       shift, and go to state 31
    SEMICOLON      shift, and go to state 32
    NOT            shift, and go to state 33
    YAJU           shift, and go to state 34
    YARIMASUNESYM  shift, and go to state 35
    IDENT          shift, and go to state 36
    INTEGER        shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR           shift, and go to state 39
    BOOL           shift, and go to state 40
    REAL           shift, and go to state 41

    BOOLSYM        [reduce using rule 4 (declaration_list)]
    BOOLSYM        [reduce using rule 41 (statement)]
    BOOLSYM        [reduce using rule 45 (case_list)]
    BOOLSYM        [reduce using rule 47 (case_stat)]
    BREAKSYM       [reduce using rule 4 (declaration_list)]
    BREAKSYM       [reduce using rule 41 (statement)]
    BREAKSYM       [reduce using rule 45 (case_list)]
    BREAKSYM       [reduce using rule 47 (case_stat)]
    CASESYM        [reduce using rule 4 (declaration_list)]
    CASESYM        [reduce using rule 41 (statement)]
    CASESYM        [reduce using rule 45 (case_list)]
    CASESYM        [reduce using rule 47 (case_stat)]
    CHARSYM        [reduce using rule 4 (declaration_list)]
    CHARSYM        [reduce using rule 41 (statement)]
    CHARSYM        [reduce using rule 45 (case_list)]
    CHARSYM        [reduce using rule 47 (case_stat)]
    CONSTSYM       [reduce using rule 4 (declaration_list)]
    CONSTSYM       [reduce using rule 41 (statement)]
    CONSTSYM       [reduce using rule 45 (case_list)]
    CONSTSYM       [reduce using rule 47 (case_stat)]
    CONTINUESYM    [reduce using rule 4 (declaration_list)]
    CONTINUESYM    [reduce using rule 41 (statement)]
    CONTINUESYM    [reduce using rule 45 (case_list)]
    CONTINUESYM    [reduce using rule 47 (case_stat)]
    DOSYM          [reduce using rule 4 (declaration_list)]
    DOSYM          [reduce using rule 41 (statement)]
    DOSYM          [reduce using rule 45 (case_list)]
    DOSYM          [reduce using rule 47 (case_stat)]
    FORSYM         [reduce using rule 4 (declaration_list)]
    FORSYM         [reduce using rule 41 (statement)]
    FORSYM         [reduce using rule 45 (case_list)]
    FORSYM         [reduce using rule 47 (case_stat)]
    INTSYM         [reduce using rule 4 (declaration_list)]
    INTSYM         [reduce using rule 41 (statement)]
    INTSYM         [reduce using rule 45 (case_list)]
    INTSYM         [reduce using rule 47 (case_stat)]
    IFSYM          [reduce using rule 4 (declaration_list)]
    IFSYM          [reduce using rule 41 (statement)]
    IFSYM          [reduce using rule 45 (case_list)]
    IFSYM          [reduce using rule 47 (case_stat)]
    READSYM        [reduce using rule 4 (declaration_list)]
    READSYM        [reduce using rule 41 (statement)]
    READSYM        [reduce using rule 45 (case_list)]
    READSYM        [reduce using rule 47 (case_stat)]
    REALSYM        [reduce using rule 4 (declaration_list)]
    REALSYM        [reduce using rule 41 (statement)]
    REALSYM        [reduce using rule 45 (case_list)]
    REALSYM        [reduce using rule 47 (case_stat)]
    LPAREN         [reduce using rule 4 (declaration_list)]
    LPAREN         [reduce using rule 41 (statement)]
    LPAREN         [reduce using rule 45 (case_list)]
    LPAREN         [reduce using rule 47 (case_stat)]
    STRINGSYM      [reduce using rule 4 (declaration_list)]
    STRINGSYM      [reduce using rule 41 (statement)]
    STRINGSYM      [reduce using rule 45 (case_list)]
    STRINGSYM      [reduce using rule 47 (case_stat)]
    SWITCHSYM      [reduce using rule 4 (declaration_list)]
    SWITCHSYM      [reduce using rule 41 (statement)]
    SWITCHSYM      [reduce using rule 45 (case_list)]
    SWITCHSYM      [reduce using rule 47 (case_stat)]
    WHILESYM       [reduce using rule 4 (declaration_list)]
    WHILESYM       [reduce using rule 41 (statement)]
    WHILESYM       [reduce using rule 45 (case_list)]
    WHILESYM       [reduce using rule 47 (case_stat)]
    WRITESYM       [reduce using rule 4 (declaration_list)]
    WRITESYM       [reduce using rule 41 (statement)]
    WRITESYM       [reduce using rule 45 (case_list)]
    WRITESYM       [reduce using rule 47 (case_stat)]
    LBRACE         [reduce using rule 4 (declaration_list)]
    LBRACE         [reduce using rule 41 (statement)]
    LBRACE         [reduce using rule 45 (case_list)]
    LBRACE         [reduce using rule 47 (case_stat)]
    RBRACE         [reduce using rule 4 (declaration_list)]
    RBRACE         [reduce using rule 41 (statement)]
    RBRACE         [reduce using rule 45 (case_list)]
    RBRACE         [reduce using rule 47 (case_stat)]
    INCPLUS        [reduce using rule 4 (declaration_list)]
    INCPLUS        [reduce using rule 41 (statement)]
    INCPLUS        [reduce using rule 45 (case_list)]
    INCPLUS        [reduce using rule 47 (case_stat)]
    INCMINUS       [reduce using rule 4 (declaration_list)]
    INCMINUS       [reduce using rule 41 (statement)]
    INCMINUS       [reduce using rule 45 (case_list)]
    INCMINUS       [reduce using rule 47 (case_stat)]
    SEMICOLON      [reduce using rule 4 (declaration_list)]
    SEMICOLON      [reduce using rule 41 (statement)]
    SEMICOLON      [reduce using rule 45 (case_list)]
    SEMICOLON      [reduce using rule 47 (case_stat)]
    SEMICOLON      [reduce using rule 71 (expression)]
    NOT            [reduce using rule 4 (declaration_list)]
    NOT            [reduce using rule 41 (statement)]
    NOT            [reduce using rule 45 (case_list)]
    NOT            [reduce using rule 47 (case_stat)]
    YAJU           [reduce using rule 4 (declaration_list)]
    YAJU           [reduce using rule 41 (statement)]
    YAJU           [reduce using rule 45 (case_list)]
    YAJU           [reduce using rule 47 (case_stat)]
    YARIMASUNESYM  [reduce using rule 4 (declaration_list)]
    YARIMASUNESYM  [reduce using rule 41 (statement)]
    YARIMASUNESYM  [reduce using rule 45 (case_list)]
    YARIMASUNESYM  [reduce using rule 47 (case_stat)]
    IDENT          [reduce using rule 4 (declaration_list)]
    IDENT          [reduce using rule 41 (statement)]
    IDENT          [reduce using rule 45 (case_list)]
    IDENT          [reduce using rule 47 (case_stat)]
    INTEGER        [reduce using rule 4 (declaration_list)]
    INTEGER        [reduce using rule 41 (statement)]
    INTEGER        [reduce using rule 45 (case_list)]
    INTEGER        [reduce using rule 47 (case_stat)]
    STRING         [reduce using rule 4 (declaration_list)]
    STRING         [reduce using rule 41 (statement)]
    STRING         [reduce using rule 45 (case_list)]
    STRING         [reduce using rule 47 (case_stat)]
    CHAR           [reduce using rule 4 (declaration_list)]
    CHAR           [reduce using rule 41 (statement)]
    CHAR           [reduce using rule 45 (case_list)]
    CHAR           [reduce using rule 47 (case_stat)]
    BOOL           [reduce using rule 4 (declaration_list)]
    BOOL           [reduce using rule 41 (statement)]
    BOOL           [reduce using rule 45 (case_list)]
    BOOL           [reduce using rule 47 (case_stat)]
    REAL           [reduce using rule 4 (declaration_list)]
    REAL           [reduce using rule 41 (statement)]
    REAL           [reduce using rule 45 (case_list)]
    REAL           [reduce using rule 47 (case_stat)]

    declaration_list      go to state 42
    declaration_stat      go to state 43
    typeenum              go to state 44
    statement             go to state 94
    switch_statement      go to state 47
    case_list             go to state 48
    case_stat             go to state 49
    continue_stat         go to state 50
    break_stat            go to state 51
    if_statement          go to state 52
    while_statement       go to state 53
    WHILESYMSTAT          go to state 54
    write_statement       go to state 55
    read_statement        go to state 56
    compound_statement    go to state 57
    for_statement         go to state 58
    do_statement          go to state 59
    var                   go to state 60
    expression_statement  go to state 61
    expression            go to state 62
    simple_expr           go to state 63
    SINGLEOPR             go to state 64
    additive_expr         go to state 65
    term                  go to state 66
    factor                go to state 67
    SEMICOLONSTAT         go to state 68
    LPARENSTAT            go to state 69
    yarimasu_stat         go to state 70


State 46

   25 statement_list: statement .

    $default  reduce using rule 25 (statement_list)


State 47

   38 statement: switch_statement .

    $default  reduce using rule 38 (statement)


State 48

   39 statement: case_list .
   43 case_list: case_list . case_stat

    CASESYM  shift, and go to state 18

    BOOLSYM        reduce using rule 39 (statement)
    BOOLSYM        [reduce using rule 47 (case_stat)]
    BREAKSYM       reduce using rule 39 (statement)
    BREAKSYM       [reduce using rule 47 (case_stat)]
    CASESYM        [reduce using rule 39 (statement)]
    CASESYM        [reduce using rule 47 (case_stat)]
    CHARSYM        reduce using rule 39 (statement)
    CHARSYM        [reduce using rule 47 (case_stat)]
    CONSTSYM       reduce using rule 39 (statement)
    CONSTSYM       [reduce using rule 47 (case_stat)]
    CONTINUESYM    reduce using rule 39 (statement)
    CONTINUESYM    [reduce using rule 47 (case_stat)]
    DOSYM          reduce using rule 39 (statement)
    DOSYM          [reduce using rule 47 (case_stat)]
    FORSYM         reduce using rule 39 (statement)
    FORSYM         [reduce using rule 47 (case_stat)]
    INTSYM         reduce using rule 39 (statement)
    INTSYM         [reduce using rule 47 (case_stat)]
    IFSYM          reduce using rule 39 (statement)
    IFSYM          [reduce using rule 47 (case_stat)]
    READSYM        reduce using rule 39 (statement)
    READSYM        [reduce using rule 47 (case_stat)]
    REALSYM        reduce using rule 39 (statement)
    REALSYM        [reduce using rule 47 (case_stat)]
    LPAREN         reduce using rule 39 (statement)
    LPAREN         [reduce using rule 47 (case_stat)]
    STRINGSYM      reduce using rule 39 (statement)
    STRINGSYM      [reduce using rule 47 (case_stat)]
    SWITCHSYM      reduce using rule 39 (statement)
    SWITCHSYM      [reduce using rule 47 (case_stat)]
    WHILESYM       reduce using rule 39 (statement)
    WHILESYM       [reduce using rule 47 (case_stat)]
    WRITESYM       reduce using rule 39 (statement)
    WRITESYM       [reduce using rule 47 (case_stat)]
    LBRACE         reduce using rule 39 (statement)
    LBRACE         [reduce using rule 47 (case_stat)]
    RBRACE         reduce using rule 39 (statement)
    RBRACE         [reduce using rule 47 (case_stat)]
    INCPLUS        reduce using rule 39 (statement)
    INCPLUS        [reduce using rule 47 (case_stat)]
    INCMINUS       reduce using rule 39 (statement)
    INCMINUS       [reduce using rule 47 (case_stat)]
    SEMICOLON      reduce using rule 39 (statement)
    SEMICOLON      [reduce using rule 47 (case_stat)]
    NOT            reduce using rule 39 (statement)
    NOT            [reduce using rule 47 (case_stat)]
    YAJU           reduce using rule 39 (statement)
    YAJU           [reduce using rule 47 (case_stat)]
    YARIMASUNESYM  reduce using rule 39 (statement)
    YARIMASUNESYM  [reduce using rule 47 (case_stat)]
    IDENT          reduce using rule 39 (statement)
    IDENT          [reduce using rule 47 (case_stat)]
    INTEGER        reduce using rule 39 (statement)
    INTEGER        [reduce using rule 47 (case_stat)]
    STRING         reduce using rule 39 (statement)
    STRING         [reduce using rule 47 (case_stat)]
    CHAR           reduce using rule 39 (statement)
    CHAR           [reduce using rule 47 (case_stat)]
    BOOL           reduce using rule 39 (statement)
    BOOL           [reduce using rule 47 (case_stat)]
    REAL           reduce using rule 39 (statement)
    REAL           [reduce using rule 47 (case_stat)]
    $default       reduce using rule 39 (statement)

    case_stat  go to state 95


State 49

   44 case_list: case_stat .

    $default  reduce using rule 44 (case_list)


State 50

   36 statement: continue_stat .

    $default  reduce using rule 36 (statement)


State 51

   37 statement: break_stat .

    $default  reduce using rule 37 (statement)


State 52

   28 statement: if_statement .

    $default  reduce using rule 28 (statement)


State 53

   29 statement: while_statement .

    $default  reduce using rule 29 (statement)


State 54

   55 while_statement: WHILESYMSTAT . LPARENSTAT expression RPARENSTAT compound_statement

    LPAREN  shift, and go to state 25

    LPARENSTAT  go to state 96


State 55

   31 statement: write_statement .

    $default  reduce using rule 31 (statement)


State 56

   30 statement: read_statement .

    $default  reduce using rule 30 (statement)


State 57

   32 statement: compound_statement .

    $default  reduce using rule 32 (statement)


State 58

   33 statement: for_statement .

    $default  reduce using rule 33 (statement)


State 59

   34 statement: do_statement .

    $default  reduce using rule 34 (statement)


State 60

   69 expression: var . BECOMES expression
  102 factor: var .

    BECOMES  shift, and go to state 97

    $default  reduce using rule 102 (factor)


State 61

   27 statement: expression_statement .

    $default  reduce using rule 27 (statement)


State 62

   67 expression_statement: expression . SEMICOLONSTAT

    SEMICOLON  shift, and go to state 32

    SEMICOLONSTAT  go to state 98


State 63

   70 expression: simple_expr .

    $default  reduce using rule 70 (expression)


State 64

   75 simple_expr: SINGLEOPR . additive_expr

    LPAREN   shift, and go to state 25
    YAJU     shift, and go to state 34
    IDENT    shift, and go to state 36
    INTEGER  shift, and go to state 37
    STRING   shift, and go to state 38
    CHAR     shift, and go to state 39
    BOOL     shift, and go to state 40
    REAL     shift, and go to state 41

    var            go to state 99
    additive_expr  go to state 100
    term           go to state 66
    factor         go to state 67
    LPARENSTAT     go to state 69


State 65

   72 simple_expr: additive_expr .
   73            | additive_expr . OPR additive_expr
   74            | additive_expr . SINGLEOPR
   93 additive_expr: additive_expr . PLUSMINUS term

    RR        shift, and go to state 101
    RL        shift, and go to state 102
    BITAND    shift, and go to state 103
    BITOR     shift, and go to state 104
    LSS       shift, and go to state 105
    LEQ       shift, and go to state 106
    GTR       shift, and go to state 107
    GEQ       shift, and go to state 108
    EQL       shift, and go to state 109
    NEQ       shift, and go to state 110
    PLUS      shift, and go to state 111
    INCPLUS   shift, and go to state 30
    MINUS     shift, and go to state 112
    INCMINUS  shift, and go to state 31
    XOR       shift, and go to state 113
    AND       shift, and go to state 114
    OR        shift, and go to state 115
    NOT       shift, and go to state 33

    $default  reduce using rule 72 (simple_expr)

    SINGLEOPR  go to state 116
    OPR        go to state 117
    PLUSMINUS  go to state 118


State 66

   92 additive_expr: term .
   97 term: term . TIMESDEVIDE factor

    TIMES   shift, and go to state 119
    DEVIDE  shift, and go to state 120
    MOD     shift, and go to state 121

    $default  reduce using rule 92 (additive_expr)

    TIMESDEVIDE  go to state 122


State 67

   96 term: factor .

    $default  reduce using rule 96 (term)


State 68

   68 expression_statement: SEMICOLONSTAT .

    $default  reduce using rule 68 (expression_statement)


State 69

  101 factor: LPARENSTAT . expression RPARENSTAT

    LPAREN    shift, and go to state 25
    INCPLUS   shift, and go to state 30
    INCMINUS  shift, and go to state 31
    NOT       shift, and go to state 33
    YAJU      shift, and go to state 34
    IDENT     shift, and go to state 36
    INTEGER   shift, and go to state 37
    STRING    shift, and go to state 38
    CHAR      shift, and go to state 39
    BOOL      shift, and go to state 40
    REAL      shift, and go to state 41

    $default  reduce using rule 71 (expression)

    var            go to state 60
    expression     go to state 123
    simple_expr    go to state 63
    SINGLEOPR      go to state 64
    additive_expr  go to state 65
    term           go to state 66
    factor         go to state 67
    LPARENSTAT     go to state 69


State 70

   40 statement: yarimasu_stat .

    $default  reduce using rule 40 (statement)


State 71

  116 para_item: typeenum IDENT .

    $default  reduce using rule 116 (para_item)


State 72

  112 function_decl: typeenum IDENT LPAREN para_list RPAREN . compound_statement

    LBRACE  shift, and go to state 29

    compound_statement  go to state 124


State 73

  114 para_list: para_list COMMA . para_item

    BOOLSYM    shift, and go to state 1
    CHARSYM    shift, and go to state 2
    INTSYM     shift, and go to state 3
    REALSYM    shift, and go to state 4
    STRINGSYM  shift, and go to state 5

    $default  reduce using rule 117 (para_item)

    typeenum   go to state 14
    para_item  go to state 125


State 74

   50 break_stat: BREAKSYM SEMICOLONSTAT .

    $default  reduce using rule 50 (break_stat)


State 75

   46 case_stat: CASESYM expression . COLON compound_statement

    COLON  shift, and go to state 126


State 76

    7 declaration_stat: CONSTSYM typeenum . identlist SEMICOLON
    8                 | CONSTSYM typeenum . identarraylist SEMICOLON

    IDENT  shift, and go to state 88

    identlist       go to state 127
    identdef        go to state 90
    identarraylist  go to state 128
    identarraydef   go to state 92


State 77

   49 continue_stat: CONTINUESYM SEMICOLONSTAT .

    $default  reduce using rule 49 (continue_stat)


State 78

   62 do_statement: DOSYM compound_statement . WHILESYM LPAREN expression RPARENSTAT SEMICOLONSTAT

    WHILESYM  shift, and go to state 129


State 79

   60 for_statement: FORSYM LPARENSTAT . expression SEMICOLONSTAT expression SEMICOLONSTAT expression RPARENSTAT INC_OR_NOT compound_statement

    LPAREN    shift, and go to state 25
    INCPLUS   shift, and go to state 30
    INCMINUS  shift, and go to state 31
    NOT       shift, and go to state 33
    YAJU      shift, and go to state 34
    IDENT     shift, and go to state 36
    INTEGER   shift, and go to state 37
    STRING    shift, and go to state 38
    CHAR      shift, and go to state 39
    BOOL      shift, and go to state 40
    REAL      shift, and go to state 41

    $default  reduce using rule 71 (expression)

    var            go to state 60
    expression     go to state 130
    simple_expr    go to state 63
    SINGLEOPR      go to state 64
    additive_expr  go to state 65
    term           go to state 66
    factor         go to state 67
    LPARENSTAT     go to state 69


State 80

   51 if_statement: IFSYM LPARENSTAT . expression RPARENSTAT compound_statement else_list

    LPAREN    shift, and go to state 25
    INCPLUS   shift, and go to state 30
    INCMINUS  shift, and go to state 31
    NOT       shift, and go to state 33
    YAJU      shift, and go to state 34
    IDENT     shift, and go to state 36
    INTEGER   shift, and go to state 37
    STRING    shift, and go to state 38
    CHAR      shift, and go to state 39
    BOOL      shift, and go to state 40
    REAL      shift, and go to state 41

    $default  reduce using rule 71 (expression)

    var            go to state 60
    expression     go to state 131
    simple_expr    go to state 63
    SINGLEOPR      go to state 64
    additive_expr  go to state 65
    term           go to state 66
    factor         go to state 67
    LPARENSTAT     go to state 69


State 81

   58 read_statement: READSYM LPARENSTAT . var RPARENSTAT SEMICOLONSTAT

    IDENT  shift, and go to state 36

    var  go to state 132


State 82

   42 switch_statement: SWITCHSYM LPARENSTAT . expression RPARENSTAT LBRACE case_list default_statement RBRACE

    LPAREN    shift, and go to state 25
    INCPLUS   shift, and go to state 30
    INCMINUS  shift, and go to state 31
    NOT       shift, and go to state 33
    YAJU      shift, and go to state 34
    IDENT     shift, and go to state 36
    INTEGER   shift, and go to state 37
    STRING    shift, and go to state 38
    CHAR      shift, and go to state 39
    BOOL      shift, and go to state 40
    REAL      shift, and go to state 41

    $default  reduce using rule 71 (expression)

    var            go to state 60
    expression     go to state 133
    simple_expr    go to state 63
    SINGLEOPR      go to state 64
    additive_expr  go to state 65
    term           go to state 66
    factor         go to state 67
    LPARENSTAT     go to state 69


State 83

   57 write_statement: WRITESYM LPARENSTAT . expression RPARENSTAT SEMICOLONSTAT

    LPAREN    shift, and go to state 25
    INCPLUS   shift, and go to state 30
    INCMINUS  shift, and go to state 31
    NOT       shift, and go to state 33
    YAJU      shift, and go to state 34
    IDENT     shift, and go to state 36
    INTEGER   shift, and go to state 37
    STRING    shift, and go to state 38
    CHAR      shift, and go to state 39
    BOOL      shift, and go to state 40
    REAL      shift, and go to state 41

    $default  reduce using rule 71 (expression)

    var            go to state 60
    expression     go to state 134
    simple_expr    go to state 63
    SINGLEOPR      go to state 64
    additive_expr  go to state 65
    term           go to state 66
    factor         go to state 67
    LPARENSTAT     go to state 69


State 84

   24 statement_list: statement_list . statement
   59 compound_statement: LBRACE statement_list . RBRACE

    BOOLSYM        shift, and go to state 1
    BREAKSYM       shift, and go to state 17
    CASESYM        shift, and go to state 18
    CHARSYM        shift, and go to state 2
    CONSTSYM       shift, and go to state 19
    CONTINUESYM    shift, and go to state 20
    DOSYM          shift, and go to state 21
    FORSYM         shift, and go to state 22
    INTSYM         shift, and go to state 3
    IFSYM          shift, and go to state 23
    READSYM        shift, and go to state 24
    REALSYM        shift, and go to state 4
    LPAREN         shift, and go to state 25
    STRINGSYM      shift, and go to state 5
    SWITCHSYM      shift, and go to state 26
    WHILESYM       shift, and go to state 27
    WRITESYM       shift, and go to state 28
    LBRACE         shift, and go to state 29
    RBRACE         shift, and go to state 135
    INCPLUS        shift, and go to state 30
    INCMINUS       shift, and go to state 31
    SEMICOLON      shift, and go to state 32
    NOT            shift, and go to state 33
    YAJU           shift, and go to state 34
    YARIMASUNESYM  shift, and go to state 35
    IDENT          shift, and go to state 36
    INTEGER        shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR           shift, and go to state 39
    BOOL           shift, and go to state 40
    REAL           shift, and go to state 41

    BOOLSYM        [reduce using rule 4 (declaration_list)]
    BOOLSYM        [reduce using rule 41 (statement)]
    BOOLSYM        [reduce using rule 45 (case_list)]
    BOOLSYM        [reduce using rule 47 (case_stat)]
    BREAKSYM       [reduce using rule 4 (declaration_list)]
    BREAKSYM       [reduce using rule 41 (statement)]
    BREAKSYM       [reduce using rule 45 (case_list)]
    BREAKSYM       [reduce using rule 47 (case_stat)]
    CASESYM        [reduce using rule 4 (declaration_list)]
    CASESYM        [reduce using rule 41 (statement)]
    CASESYM        [reduce using rule 45 (case_list)]
    CASESYM        [reduce using rule 47 (case_stat)]
    CHARSYM        [reduce using rule 4 (declaration_list)]
    CHARSYM        [reduce using rule 41 (statement)]
    CHARSYM        [reduce using rule 45 (case_list)]
    CHARSYM        [reduce using rule 47 (case_stat)]
    CONSTSYM       [reduce using rule 4 (declaration_list)]
    CONSTSYM       [reduce using rule 41 (statement)]
    CONSTSYM       [reduce using rule 45 (case_list)]
    CONSTSYM       [reduce using rule 47 (case_stat)]
    CONTINUESYM    [reduce using rule 4 (declaration_list)]
    CONTINUESYM    [reduce using rule 41 (statement)]
    CONTINUESYM    [reduce using rule 45 (case_list)]
    CONTINUESYM    [reduce using rule 47 (case_stat)]
    DOSYM          [reduce using rule 4 (declaration_list)]
    DOSYM          [reduce using rule 41 (statement)]
    DOSYM          [reduce using rule 45 (case_list)]
    DOSYM          [reduce using rule 47 (case_stat)]
    FORSYM         [reduce using rule 4 (declaration_list)]
    FORSYM         [reduce using rule 41 (statement)]
    FORSYM         [reduce using rule 45 (case_list)]
    FORSYM         [reduce using rule 47 (case_stat)]
    INTSYM         [reduce using rule 4 (declaration_list)]
    INTSYM         [reduce using rule 41 (statement)]
    INTSYM         [reduce using rule 45 (case_list)]
    INTSYM         [reduce using rule 47 (case_stat)]
    IFSYM          [reduce using rule 4 (declaration_list)]
    IFSYM          [reduce using rule 41 (statement)]
    IFSYM          [reduce using rule 45 (case_list)]
    IFSYM          [reduce using rule 47 (case_stat)]
    READSYM        [reduce using rule 4 (declaration_list)]
    READSYM        [reduce using rule 41 (statement)]
    READSYM        [reduce using rule 45 (case_list)]
    READSYM        [reduce using rule 47 (case_stat)]
    REALSYM        [reduce using rule 4 (declaration_list)]
    REALSYM        [reduce using rule 41 (statement)]
    REALSYM        [reduce using rule 45 (case_list)]
    REALSYM        [reduce using rule 47 (case_stat)]
    LPAREN         [reduce using rule 4 (declaration_list)]
    LPAREN         [reduce using rule 41 (statement)]
    LPAREN         [reduce using rule 45 (case_list)]
    LPAREN         [reduce using rule 47 (case_stat)]
    STRINGSYM      [reduce using rule 4 (declaration_list)]
    STRINGSYM      [reduce using rule 41 (statement)]
    STRINGSYM      [reduce using rule 45 (case_list)]
    STRINGSYM      [reduce using rule 47 (case_stat)]
    SWITCHSYM      [reduce using rule 4 (declaration_list)]
    SWITCHSYM      [reduce using rule 41 (statement)]
    SWITCHSYM      [reduce using rule 45 (case_list)]
    SWITCHSYM      [reduce using rule 47 (case_stat)]
    WHILESYM       [reduce using rule 4 (declaration_list)]
    WHILESYM       [reduce using rule 41 (statement)]
    WHILESYM       [reduce using rule 45 (case_list)]
    WHILESYM       [reduce using rule 47 (case_stat)]
    WRITESYM       [reduce using rule 4 (declaration_list)]
    WRITESYM       [reduce using rule 41 (statement)]
    WRITESYM       [reduce using rule 45 (case_list)]
    WRITESYM       [reduce using rule 47 (case_stat)]
    LBRACE         [reduce using rule 4 (declaration_list)]
    LBRACE         [reduce using rule 41 (statement)]
    LBRACE         [reduce using rule 45 (case_list)]
    LBRACE         [reduce using rule 47 (case_stat)]
    RBRACE         [reduce using rule 4 (declaration_list)]
    RBRACE         [reduce using rule 41 (statement)]
    RBRACE         [reduce using rule 45 (case_list)]
    RBRACE         [reduce using rule 47 (case_stat)]
    INCPLUS        [reduce using rule 4 (declaration_list)]
    INCPLUS        [reduce using rule 41 (statement)]
    INCPLUS        [reduce using rule 45 (case_list)]
    INCPLUS        [reduce using rule 47 (case_stat)]
    INCMINUS       [reduce using rule 4 (declaration_list)]
    INCMINUS       [reduce using rule 41 (statement)]
    INCMINUS       [reduce using rule 45 (case_list)]
    INCMINUS       [reduce using rule 47 (case_stat)]
    SEMICOLON      [reduce using rule 4 (declaration_list)]
    SEMICOLON      [reduce using rule 41 (statement)]
    SEMICOLON      [reduce using rule 45 (case_list)]
    SEMICOLON      [reduce using rule 47 (case_stat)]
    SEMICOLON      [reduce using rule 71 (expression)]
    NOT            [reduce using rule 4 (declaration_list)]
    NOT            [reduce using rule 41 (statement)]
    NOT            [reduce using rule 45 (case_list)]
    NOT            [reduce using rule 47 (case_stat)]
    YAJU           [reduce using rule 4 (declaration_list)]
    YAJU           [reduce using rule 41 (statement)]
    YAJU           [reduce using rule 45 (case_list)]
    YAJU           [reduce using rule 47 (case_stat)]
    YARIMASUNESYM  [reduce using rule 4 (declaration_list)]
    YARIMASUNESYM  [reduce using rule 41 (statement)]
    YARIMASUNESYM  [reduce using rule 45 (case_list)]
    YARIMASUNESYM  [reduce using rule 47 (case_stat)]
    IDENT          [reduce using rule 4 (declaration_list)]
    IDENT          [reduce using rule 41 (statement)]
    IDENT          [reduce using rule 45 (case_list)]
    IDENT          [reduce using rule 47 (case_stat)]
    INTEGER        [reduce using rule 4 (declaration_list)]
    INTEGER        [reduce using rule 41 (statement)]
    INTEGER        [reduce using rule 45 (case_list)]
    INTEGER        [reduce using rule 47 (case_stat)]
    STRING         [reduce using rule 4 (declaration_list)]
    STRING         [reduce using rule 41 (statement)]
    STRING         [reduce using rule 45 (case_list)]
    STRING         [reduce using rule 47 (case_stat)]
    CHAR           [reduce using rule 4 (declaration_list)]
    CHAR           [reduce using rule 41 (statement)]
    CHAR           [reduce using rule 45 (case_list)]
    CHAR           [reduce using rule 47 (case_stat)]
    BOOL           [reduce using rule 4 (declaration_list)]
    BOOL           [reduce using rule 41 (statement)]
    BOOL           [reduce using rule 45 (case_list)]
    BOOL           [reduce using rule 47 (case_stat)]
    REAL           [reduce using rule 4 (declaration_list)]
    REAL           [reduce using rule 41 (statement)]
    REAL           [reduce using rule 45 (case_list)]
    REAL           [reduce using rule 47 (case_stat)]

    declaration_list      go to state 42
    declaration_stat      go to state 43
    typeenum              go to state 44
    statement             go to state 94
    switch_statement      go to state 47
    case_list             go to state 48
    case_stat             go to state 49
    continue_stat         go to state 50
    break_stat            go to state 51
    if_statement          go to state 52
    while_statement       go to state 53
    WHILESYMSTAT          go to state 54
    write_statement       go to state 55
    read_statement        go to state 56
    compound_statement    go to state 57
    for_statement         go to state 58
    do_statement          go to state 59
    var                   go to state 60
    expression_statement  go to state 61
    expression            go to state 62
    simple_expr           go to state 63
    SINGLEOPR             go to state 64
    additive_expr         go to state 65
    term                  go to state 66
    factor                go to state 67
    SEMICOLONSTAT         go to state 68
    LPARENSTAT            go to state 69
    yarimasu_stat         go to state 70


State 85

  118 yarimasu_stat: YARIMASUNESYM SEMICOLON .

    $default  reduce using rule 118 (yarimasu_stat)


State 86

   64 var: IDENT LBRACKET . expression_list RBRACKET

    LPAREN    shift, and go to state 25
    INCPLUS   shift, and go to state 30
    INCMINUS  shift, and go to state 31
    NOT       shift, and go to state 33
    YAJU      shift, and go to state 34
    IDENT     shift, and go to state 36
    INTEGER   shift, and go to state 37
    STRING    shift, and go to state 38
    CHAR      shift, and go to state 39
    BOOL      shift, and go to state 40
    REAL      shift, and go to state 41

    $default  reduce using rule 71 (expression)

    var              go to state 60
    expression_list  go to state 136
    expression       go to state 137
    simple_expr      go to state 63
    SINGLEOPR        go to state 64
    additive_expr    go to state 65
    term             go to state 66
    factor           go to state 67
    LPARENSTAT       go to state 69


State 87

    2 declaration_list: declaration_list declaration_stat .

    $default  reduce using rule 2 (declaration_list)


State 88

   11 identdef: IDENT .
   12         | IDENT . BECOMES factor
   20 identarraydef: IDENT . LBRACKET dimensionlist RBRACKET

    LBRACKET  shift, and go to state 138
    BECOMES   shift, and go to state 139

    $default  reduce using rule 11 (identdef)


State 89

    5 declaration_stat: typeenum identlist . SEMICOLONSTAT
   10 identlist: identlist . COMMA identdef

    COMMA      shift, and go to state 140
    SEMICOLON  shift, and go to state 32

    SEMICOLONSTAT  go to state 141


State 90

    9 identlist: identdef .

    $default  reduce using rule 9 (identlist)


State 91

    6 declaration_stat: typeenum identarraylist . SEMICOLON
   19 identarraylist: identarraylist . COMMA identarraydef

    COMMA      shift, and go to state 142
    SEMICOLON  shift, and go to state 143


State 92

   18 identarraylist: identarraydef .

    $default  reduce using rule 18 (identarraylist)


State 93

    1 program: function_decl MAINSYM LBRACE statement_list RBRACE .

    $default  reduce using rule 1 (program)


State 94

   24 statement_list: statement_list statement .

    $default  reduce using rule 24 (statement_list)


State 95

   43 case_list: case_list case_stat .

    $default  reduce using rule 43 (case_list)


State 96

   55 while_statement: WHILESYMSTAT LPARENSTAT . expression RPARENSTAT compound_statement

    LPAREN    shift, and go to state 25
    INCPLUS   shift, and go to state 30
    INCMINUS  shift, and go to state 31
    NOT       shift, and go to state 33
    YAJU      shift, and go to state 34
    IDENT     shift, and go to state 36
    INTEGER   shift, and go to state 37
    STRING    shift, and go to state 38
    CHAR      shift, and go to state 39
    BOOL      shift, and go to state 40
    REAL      shift, and go to state 41

    $default  reduce using rule 71 (expression)

    var            go to state 60
    expression     go to state 144
    simple_expr    go to state 63
    SINGLEOPR      go to state 64
    additive_expr  go to state 65
    term           go to state 66
    factor         go to state 67
    LPARENSTAT     go to state 69


State 97

   69 expression: var BECOMES . expression

    LPAREN    shift, and go to state 25
    INCPLUS   shift, and go to state 30
    INCMINUS  shift, and go to state 31
    NOT       shift, and go to state 33
    YAJU      shift, and go to state 34
    IDENT     shift, and go to state 36
    INTEGER   shift, and go to state 37
    STRING    shift, and go to state 38
    CHAR      shift, and go to state 39
    BOOL      shift, and go to state 40
    REAL      shift, and go to state 41

    $default  reduce using rule 71 (expression)

    var            go to state 60
    expression     go to state 145
    simple_expr    go to state 63
    SINGLEOPR      go to state 64
    additive_expr  go to state 65
    term           go to state 66
    factor         go to state 67
    LPARENSTAT     go to state 69


State 98

   67 expression_statement: expression SEMICOLONSTAT .

    $default  reduce using rule 67 (expression_statement)


State 99

  102 factor: var .

    $default  reduce using rule 102 (factor)


State 100

   75 simple_expr: SINGLEOPR additive_expr .
   93 additive_expr: additive_expr . PLUSMINUS term

    PLUS   shift, and go to state 111
    MINUS  shift, and go to state 112

    $default  reduce using rule 75 (simple_expr)

    PLUSMINUS  go to state 118


State 101

   90 OPR: RR .

    $default  reduce using rule 90 (OPR)


State 102

   91 OPR: RL .

    $default  reduce using rule 91 (OPR)


State 103

   88 OPR: BITAND .

    $default  reduce using rule 88 (OPR)


State 104

   89 OPR: BITOR .

    $default  reduce using rule 89 (OPR)


State 105

   81 OPR: LSS .

    $default  reduce using rule 81 (OPR)


State 106

   82 OPR: LEQ .

    $default  reduce using rule 82 (OPR)


State 107

   83 OPR: GTR .

    $default  reduce using rule 83 (OPR)


State 108

   84 OPR: GEQ .

    $default  reduce using rule 84 (OPR)


State 109

   79 OPR: EQL .

    $default  reduce using rule 79 (OPR)


State 110

   80 OPR: NEQ .

    $default  reduce using rule 80 (OPR)


State 111

   94 PLUSMINUS: PLUS .

    $default  reduce using rule 94 (PLUSMINUS)


State 112

   95 PLUSMINUS: MINUS .

    $default  reduce using rule 95 (PLUSMINUS)


State 113

   87 OPR: XOR .

    $default  reduce using rule 87 (OPR)


State 114

   85 OPR: AND .

    $default  reduce using rule 85 (OPR)


State 115

   86 OPR: OR .

    $default  reduce using rule 86 (OPR)


State 116

   74 simple_expr: additive_expr SINGLEOPR .

    $default  reduce using rule 74 (simple_expr)


State 117

   73 simple_expr: additive_expr OPR . additive_expr

    LPAREN   shift, and go to state 25
    YAJU     shift, and go to state 34
    IDENT    shift, and go to state 36
    INTEGER  shift, and go to state 37
    STRING   shift, and go to state 38
    CHAR     shift, and go to state 39
    BOOL     shift, and go to state 40
    REAL     shift, and go to state 41

    var            go to state 99
    additive_expr  go to state 146
    term           go to state 66
    factor         go to state 67
    LPARENSTAT     go to state 69


State 118

   93 additive_expr: additive_expr PLUSMINUS . term

    LPAREN   shift, and go to state 25
    YAJU     shift, and go to state 34
    IDENT    shift, and go to state 36
    INTEGER  shift, and go to state 37
    STRING   shift, and go to state 38
    CHAR     shift, and go to state 39
    BOOL     shift, and go to state 40
    REAL     shift, and go to state 41

    var         go to state 99
    term        go to state 147
    factor      go to state 67
    LPARENSTAT  go to state 69


State 119

   98 TIMESDEVIDE: TIMES .

    $default  reduce using rule 98 (TIMESDEVIDE)


State 120

   99 TIMESDEVIDE: DEVIDE .

    $default  reduce using rule 99 (TIMESDEVIDE)


State 121

  100 TIMESDEVIDE: MOD .

    $default  reduce using rule 100 (TIMESDEVIDE)


State 122

   97 term: term TIMESDEVIDE . factor

    LPAREN   shift, and go to state 25
    YAJU     shift, and go to state 34
    IDENT    shift, and go to state 36
    INTEGER  shift, and go to state 37
    STRING   shift, and go to state 38
    CHAR     shift, and go to state 39
    BOOL     shift, and go to state 40
    REAL     shift, and go to state 41

    var         go to state 99
    factor      go to state 148
    LPARENSTAT  go to state 69


State 123

  101 factor: LPARENSTAT expression . RPARENSTAT

    RPAREN  shift, and go to state 149

    RPARENSTAT  go to state 150


State 124

  112 function_decl: typeenum IDENT LPAREN para_list RPAREN compound_statement .

    $default  reduce using rule 112 (function_decl)


State 125

  114 para_list: para_list COMMA para_item .

    $default  reduce using rule 114 (para_list)


State 126

   46 case_stat: CASESYM expression COLON . compound_statement

    LBRACE  shift, and go to state 29

    compound_statement  go to state 151


State 127

    7 declaration_stat: CONSTSYM typeenum identlist . SEMICOLON
   10 identlist: identlist . COMMA identdef

    COMMA      shift, and go to state 140
    SEMICOLON  shift, and go to state 152


State 128

    8 declaration_stat: CONSTSYM typeenum identarraylist . SEMICOLON
   19 identarraylist: identarraylist . COMMA identarraydef

    COMMA      shift, and go to state 142
    SEMICOLON  shift, and go to state 153


State 129

   62 do_statement: DOSYM compound_statement WHILESYM . LPAREN expression RPARENSTAT SEMICOLONSTAT

    LPAREN  shift, and go to state 154


State 130

   60 for_statement: FORSYM LPARENSTAT expression . SEMICOLONSTAT expression SEMICOLONSTAT expression RPARENSTAT INC_OR_NOT compound_statement

    SEMICOLON  shift, and go to state 32

    SEMICOLONSTAT  go to state 155


State 131

   51 if_statement: IFSYM LPARENSTAT expression . RPARENSTAT compound_statement else_list

    RPAREN  shift, and go to state 149

    RPARENSTAT  go to state 156


State 132

   58 read_statement: READSYM LPARENSTAT var . RPARENSTAT SEMICOLONSTAT

    RPAREN  shift, and go to state 149

    RPARENSTAT  go to state 157


State 133

   42 switch_statement: SWITCHSYM LPARENSTAT expression . RPARENSTAT LBRACE case_list default_statement RBRACE

    RPAREN  shift, and go to state 149

    RPARENSTAT  go to state 158


State 134

   57 write_statement: WRITESYM LPARENSTAT expression . RPARENSTAT SEMICOLONSTAT

    RPAREN  shift, and go to state 149

    RPARENSTAT  go to state 159


State 135

   59 compound_statement: LBRACE statement_list RBRACE .

    $default  reduce using rule 59 (compound_statement)


State 136

   64 var: IDENT LBRACKET expression_list . RBRACKET
   66 expression_list: expression_list . COMMA expression

    RBRACKET  shift, and go to state 160
    COMMA     shift, and go to state 161


State 137

   65 expression_list: expression .

    $default  reduce using rule 65 (expression_list)


State 138

   20 identarraydef: IDENT LBRACKET . dimensionlist RBRACKET

    INTEGER  shift, and go to state 162

    dimensionlist  go to state 163
    dimension      go to state 164


State 139

   12 identdef: IDENT BECOMES . factor

    LPAREN   shift, and go to state 25
    YAJU     shift, and go to state 34
    IDENT    shift, and go to state 36
    INTEGER  shift, and go to state 37
    STRING   shift, and go to state 38
    CHAR     shift, and go to state 39
    BOOL     shift, and go to state 40
    REAL     shift, and go to state 41

    var         go to state 99
    factor      go to state 165
    LPARENSTAT  go to state 69


State 140

   10 identlist: identlist COMMA . identdef

    IDENT  shift, and go to state 166

    identdef  go to state 167


State 141

    5 declaration_stat: typeenum identlist SEMICOLONSTAT .

    $default  reduce using rule 5 (declaration_stat)


State 142

   19 identarraylist: identarraylist COMMA . identarraydef

    IDENT  shift, and go to state 168

    identarraydef  go to state 169


State 143

    6 declaration_stat: typeenum identarraylist SEMICOLON .

    $default  reduce using rule 6 (declaration_stat)


State 144

   55 while_statement: WHILESYMSTAT LPARENSTAT expression . RPARENSTAT compound_statement

    RPAREN  shift, and go to state 149

    RPARENSTAT  go to state 170


State 145

   69 expression: var BECOMES expression .

    $default  reduce using rule 69 (expression)


State 146

   73 simple_expr: additive_expr OPR additive_expr .
   93 additive_expr: additive_expr . PLUSMINUS term

    PLUS   shift, and go to state 111
    MINUS  shift, and go to state 112

    $default  reduce using rule 73 (simple_expr)

    PLUSMINUS  go to state 118


State 147

   93 additive_expr: additive_expr PLUSMINUS term .
   97 term: term . TIMESDEVIDE factor

    TIMES   shift, and go to state 119
    DEVIDE  shift, and go to state 120
    MOD     shift, and go to state 121

    $default  reduce using rule 93 (additive_expr)

    TIMESDEVIDE  go to state 122


State 148

   97 term: term TIMESDEVIDE factor .

    $default  reduce using rule 97 (term)


State 149

  111 RPARENSTAT: RPAREN .

    $default  reduce using rule 111 (RPARENSTAT)


State 150

  101 factor: LPARENSTAT expression RPARENSTAT .

    $default  reduce using rule 101 (factor)


State 151

   46 case_stat: CASESYM expression COLON compound_statement .

    $default  reduce using rule 46 (case_stat)


State 152

    7 declaration_stat: CONSTSYM typeenum identlist SEMICOLON .

    $default  reduce using rule 7 (declaration_stat)


State 153

    8 declaration_stat: CONSTSYM typeenum identarraylist SEMICOLON .

    $default  reduce using rule 8 (declaration_stat)


State 154

   62 do_statement: DOSYM compound_statement WHILESYM LPAREN . expression RPARENSTAT SEMICOLONSTAT

    LPAREN    shift, and go to state 25
    INCPLUS   shift, and go to state 30
    INCMINUS  shift, and go to state 31
    NOT       shift, and go to state 33
    YAJU      shift, and go to state 34
    IDENT     shift, and go to state 36
    INTEGER   shift, and go to state 37
    STRING    shift, and go to state 38
    CHAR      shift, and go to state 39
    BOOL      shift, and go to state 40
    REAL      shift, and go to state 41

    $default  reduce using rule 71 (expression)

    var            go to state 60
    expression     go to state 171
    simple_expr    go to state 63
    SINGLEOPR      go to state 64
    additive_expr  go to state 65
    term           go to state 66
    factor         go to state 67
    LPARENSTAT     go to state 69


State 155

   60 for_statement: FORSYM LPARENSTAT expression SEMICOLONSTAT . expression SEMICOLONSTAT expression RPARENSTAT INC_OR_NOT compound_statement

    LPAREN    shift, and go to state 25
    INCPLUS   shift, and go to state 30
    INCMINUS  shift, and go to state 31
    NOT       shift, and go to state 33
    YAJU      shift, and go to state 34
    IDENT     shift, and go to state 36
    INTEGER   shift, and go to state 37
    STRING    shift, and go to state 38
    CHAR      shift, and go to state 39
    BOOL      shift, and go to state 40
    REAL      shift, and go to state 41

    $default  reduce using rule 71 (expression)

    var            go to state 60
    expression     go to state 172
    simple_expr    go to state 63
    SINGLEOPR      go to state 64
    additive_expr  go to state 65
    term           go to state 66
    factor         go to state 67
    LPARENSTAT     go to state 69


State 156

   51 if_statement: IFSYM LPARENSTAT expression RPARENSTAT . compound_statement else_list

    LBRACE  shift, and go to state 29

    compound_statement  go to state 173


State 157

   58 read_statement: READSYM LPARENSTAT var RPARENSTAT . SEMICOLONSTAT

    SEMICOLON  shift, and go to state 32

    SEMICOLONSTAT  go to state 174


State 158

   42 switch_statement: SWITCHSYM LPARENSTAT expression RPARENSTAT . LBRACE case_list default_statement RBRACE

    LBRACE  shift, and go to state 175


State 159

   57 write_statement: WRITESYM LPARENSTAT expression RPARENSTAT . SEMICOLONSTAT

    SEMICOLON  shift, and go to state 32

    SEMICOLONSTAT  go to state 176


State 160

   64 var: IDENT LBRACKET expression_list RBRACKET .

    $default  reduce using rule 64 (var)


State 161

   66 expression_list: expression_list COMMA . expression

    LPAREN    shift, and go to state 25
    INCPLUS   shift, and go to state 30
    INCMINUS  shift, and go to state 31
    NOT       shift, and go to state 33
    YAJU      shift, and go to state 34
    IDENT     shift, and go to state 36
    INTEGER   shift, and go to state 37
    STRING    shift, and go to state 38
    CHAR      shift, and go to state 39
    BOOL      shift, and go to state 40
    REAL      shift, and go to state 41

    $default  reduce using rule 71 (expression)

    var            go to state 60
    expression     go to state 177
    simple_expr    go to state 63
    SINGLEOPR      go to state 64
    additive_expr  go to state 65
    term           go to state 66
    factor         go to state 67
    LPARENSTAT     go to state 69


State 162

   23 dimension: INTEGER .

    $default  reduce using rule 23 (dimension)


State 163

   20 identarraydef: IDENT LBRACKET dimensionlist . RBRACKET
   22 dimensionlist: dimensionlist . COMMA dimension

    RBRACKET  shift, and go to state 178
    COMMA     shift, and go to state 179


State 164

   21 dimensionlist: dimension .

    $default  reduce using rule 21 (dimensionlist)


State 165

   12 identdef: IDENT BECOMES factor .

    $default  reduce using rule 12 (identdef)


State 166

   11 identdef: IDENT .
   12         | IDENT . BECOMES factor

    BECOMES  shift, and go to state 139

    $default  reduce using rule 11 (identdef)


State 167

   10 identlist: identlist COMMA identdef .

    $default  reduce using rule 10 (identlist)


State 168

   20 identarraydef: IDENT . LBRACKET dimensionlist RBRACKET

    LBRACKET  shift, and go to state 138


State 169

   19 identarraylist: identarraylist COMMA identarraydef .

    $default  reduce using rule 19 (identarraylist)


State 170

   55 while_statement: WHILESYMSTAT LPARENSTAT expression RPARENSTAT . compound_statement

    LBRACE  shift, and go to state 29

    compound_statement  go to state 180


State 171

   62 do_statement: DOSYM compound_statement WHILESYM LPAREN expression . RPARENSTAT SEMICOLONSTAT

    RPAREN  shift, and go to state 149

    RPARENSTAT  go to state 181


State 172

   60 for_statement: FORSYM LPARENSTAT expression SEMICOLONSTAT expression . SEMICOLONSTAT expression RPARENSTAT INC_OR_NOT compound_statement

    SEMICOLON  shift, and go to state 32

    SEMICOLONSTAT  go to state 182


State 173

   51 if_statement: IFSYM LPARENSTAT expression RPARENSTAT compound_statement . else_list

    ELSESYM  shift, and go to state 183

    $default  reduce using rule 53 (else_list)

    else_list    go to state 184
    ELSESYMSTAT  go to state 185


State 174

   58 read_statement: READSYM LPARENSTAT var RPARENSTAT SEMICOLONSTAT .

    $default  reduce using rule 58 (read_statement)


State 175

   42 switch_statement: SWITCHSYM LPARENSTAT expression RPARENSTAT LBRACE . case_list default_statement RBRACE

    CASESYM  shift, and go to state 18

    CASESYM     [reduce using rule 45 (case_list)]
    CASESYM     [reduce using rule 47 (case_stat)]
    DEFAULTSYM  reduce using rule 45 (case_list)
    DEFAULTSYM  [reduce using rule 47 (case_stat)]
    $default    reduce using rule 45 (case_list)

    case_list  go to state 186
    case_stat  go to state 49


State 176

   57 write_statement: WRITESYM LPARENSTAT expression RPARENSTAT SEMICOLONSTAT .

    $default  reduce using rule 57 (write_statement)


State 177

   66 expression_list: expression_list COMMA expression .

    $default  reduce using rule 66 (expression_list)


State 178

   20 identarraydef: IDENT LBRACKET dimensionlist RBRACKET .

    $default  reduce using rule 20 (identarraydef)


State 179

   22 dimensionlist: dimensionlist COMMA . dimension

    INTEGER  shift, and go to state 162

    dimension  go to state 187


State 180

   55 while_statement: WHILESYMSTAT LPARENSTAT expression RPARENSTAT compound_statement .

    $default  reduce using rule 55 (while_statement)


State 181

   62 do_statement: DOSYM compound_statement WHILESYM LPAREN expression RPARENSTAT . SEMICOLONSTAT

    SEMICOLON  shift, and go to state 32

    SEMICOLONSTAT  go to state 188


State 182

   60 for_statement: FORSYM LPARENSTAT expression SEMICOLONSTAT expression SEMICOLONSTAT . expression RPARENSTAT INC_OR_NOT compound_statement

    LPAREN    shift, and go to state 25
    INCPLUS   shift, and go to state 30
    INCMINUS  shift, and go to state 31
    NOT       shift, and go to state 33
    YAJU      shift, and go to state 34
    IDENT     shift, and go to state 36
    INTEGER   shift, and go to state 37
    STRING    shift, and go to state 38
    CHAR      shift, and go to state 39
    BOOL      shift, and go to state 40
    REAL      shift, and go to state 41

    $default  reduce using rule 71 (expression)

    var            go to state 60
    expression     go to state 189
    simple_expr    go to state 63
    SINGLEOPR      go to state 64
    additive_expr  go to state 65
    term           go to state 66
    factor         go to state 67
    LPARENSTAT     go to state 69


State 183

   54 ELSESYMSTAT: ELSESYM .

    $default  reduce using rule 54 (ELSESYMSTAT)


State 184

   51 if_statement: IFSYM LPARENSTAT expression RPARENSTAT compound_statement else_list .

    $default  reduce using rule 51 (if_statement)


State 185

   52 else_list: ELSESYMSTAT . compound_statement

    LBRACE  shift, and go to state 29

    compound_statement  go to state 190


State 186

   42 switch_statement: SWITCHSYM LPARENSTAT expression RPARENSTAT LBRACE case_list . default_statement RBRACE
   43 case_list: case_list . case_stat

    CASESYM     shift, and go to state 18
    DEFAULTSYM  shift, and go to state 191

    CASESYM     [reduce using rule 47 (case_stat)]
    DEFAULTSYM  [reduce using rule 47 (case_stat)]

    case_stat          go to state 95
    default_statement  go to state 192


State 187

   22 dimensionlist: dimensionlist COMMA dimension .

    $default  reduce using rule 22 (dimensionlist)


State 188

   62 do_statement: DOSYM compound_statement WHILESYM LPAREN expression RPARENSTAT SEMICOLONSTAT .

    $default  reduce using rule 62 (do_statement)


State 189

   60 for_statement: FORSYM LPARENSTAT expression SEMICOLONSTAT expression SEMICOLONSTAT expression . RPARENSTAT INC_OR_NOT compound_statement

    RPAREN  shift, and go to state 149

    RPARENSTAT  go to state 193


State 190

   52 else_list: ELSESYMSTAT compound_statement .

    $default  reduce using rule 52 (else_list)


State 191

   48 default_statement: DEFAULTSYM . COLON compound_statement

    COLON  shift, and go to state 194


State 192

   42 switch_statement: SWITCHSYM LPARENSTAT expression RPARENSTAT LBRACE case_list default_statement . RBRACE

    RBRACE  shift, and go to state 195


State 193

   60 for_statement: FORSYM LPARENSTAT expression SEMICOLONSTAT expression SEMICOLONSTAT expression RPARENSTAT . INC_OR_NOT compound_statement

    $default  reduce using rule 61 (INC_OR_NOT)

    INC_OR_NOT  go to state 196


State 194

   48 default_statement: DEFAULTSYM COLON . compound_statement

    LBRACE  shift, and go to state 29

    compound_statement  go to state 197


State 195

   42 switch_statement: SWITCHSYM LPARENSTAT expression RPARENSTAT LBRACE case_list default_statement RBRACE .

    $default  reduce using rule 42 (switch_statement)


State 196

   60 for_statement: FORSYM LPARENSTAT expression SEMICOLONSTAT expression SEMICOLONSTAT expression RPARENSTAT INC_OR_NOT . compound_statement

    LBRACE  shift, and go to state 29

    compound_statement  go to state 198


State 197

   48 default_statement: DEFAULTSYM COLON compound_statement .

    $default  reduce using rule 48 (default_statement)


State 198

   60 for_statement: FORSYM LPARENSTAT expression SEMICOLONSTAT expression SEMICOLONSTAT expression RPARENSTAT INC_OR_NOT compound_statement .

    $default  reduce using rule 60 (for_statement)
